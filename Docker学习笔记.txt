Docker学习笔记
一、docker的安装过程
1、使用yum安装的方式
[root@localhost ~]# yum update

2、添加docker的repo源
[root@localhost ~]# tee /etc/yum.repos.d/docker.repo <<-'EOF'
[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/7/
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF

3、安装Docker软件包
[root@localhost ~]# yum install docker-engine

4、启用服务（开机自动启动）
[root@localhost ~]# systemctl enable docker.service

5、启动Docker守护进程
[root@localhost ~]# systemctl start docker

6、验证docker是通过在一个容器中运行的测试图像正确安装
[root@localhost ~]# docker run --rm hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
c04b14da8d14: Pull complete 
Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker Hub account:
 https://hub.docker.com

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/
二、docker的使用实例
1、查看Docker的版本信息
[root@localhost ~]# docker version
Client:
 Version:      1.12.5
 API version:  1.24
 Go version:   go1.6.4
 Git commit:   7392c3b
 Built:        Fri Dec 16 02:23:59 2016
 OS/Arch:      linux/amd64

Server:
 Version:      1.12.5
 API version:  1.24
 Go version:   go1.6.4
 Git commit:   7392c3b
 Built:        Fri Dec 16 02:23:59 2016
 OS/Arch:      linux/amd64

2、查看Docker信息，显示docker的系统信息和镜像数
[root@localhost ~]# docker info

3、从Docker Hub库中搜索符合条件的镜像
[root@localhost ~]# docker serach centos

4、拉取符合条件的镜像
[root@localhost ~]# docker pull centos

5、也可以导入本地的镜像
[root@localhost ~]# docker load -i 本地镜像归档包

6、docker的镜像及一些数据都在/var/lib/docker/*下
[root@localhost docker]# du -sh /var/lib/docker/*
0	/var/lib/docker/containers
230M	/var/lib/docker/devicemapper
768K	/var/lib/docker/image
44K	/var/lib/docker/network
0	/var/lib/docker/swarm
16M	/var/lib/docker/tmp
0	/var/lib/docker/trust
24K	/var/lib/docker/volumes

三、docker平台的基本使用方法
1、运行一个container并加载镜像centos，运行起这个实例后，运行/bin/bash命令
[root@localhost ~]# docker run -i -t centos /bin/bash    #启动一个容器在其中运行某一个命令
相关选项：
-i  以交互式模式运行容器，通常与-t同时使用
-t  为容器重新分配一个伪输入终端，通常与-i同时使用

2、查看现在运行的Linux环境
[root@33e60934dbd8 usr]# cat /etc/redhat-release 
CentOS Linux release 7.3.1611 (Core) 

3、退出容器
[root@33e60934dbd8 usr]# exit^C

4、在container中启动一个长久运行的进程
[root@bogon ~]# JOB=$(docker run -d centos /bin/sh -c "while true;do echo Hello World;sleep 1;done")
[root@bogon ~]# echo $JOB
5260ab570dcdb0632b166d5822d77747681d47bd4cc0a37c40f0d921abf1d106
相关选项：
-d 后台运行容器，并返回容器ID

6、从一个容器中取日志，查看标准输入与输出的内容
[root@bogon ~]# docker logs $JOB
Hello World
Hello World

7、查看正在运行的容器
[root@bogon ~]# docker ps      #列出所有运行中的容器
[root@bogon ~]# docker ps -a   #-a 表示列出所有容器（包括沉睡或退出状态的容器）

8、列出所有本地镜像
[root@bogon ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              01f818af747d        13 days ago         181.6 MB
centos              latest              67591570dd29        3 weeks ago         191.8 MB
hello-world         latest              c54a2cc56cbb        6 months ago        1.848 kB

9、杀死一个容器
[root@bogon ~]# docker kill 5260ab570dcd    # 5260ab570dcd表示容器ID
5260ab570dcd

四、启动、停止、重启container容器

1、启动容器
[root@bogon ~]# docker start +容器ID

2、停止容器
[root@bogon ~]# docker stop +容器ID

3、重启容器
[root@bogon ~]# docker restart +容器ID

4、删除指定的容器
[root@bogon ~]# docker rm -f 5260ab570dcd   #  -f表示强制删除
5260ab570dcd

五、Docker images制作的两种方法
方法1：docker commit  #保存container的当前状态到images后然后生成对应的image
方法2：docker build   #使用dockerfile 自动化制作 images

方法1、docker commit
语法：docker commit   <容器ID>  <新image的name>
[root@bogon ~]# docker commit 7d9a5b553c4f centos:nmap-ncat
sha256:beaf31a64be3a04d9cca9aa5c79b3acd1acbfce29aa9876a5707e1a0df277a13
# 容器ID可以用docker ps -a查看

方法2、docker build
语法：docker build -t 父镜像名：自己定义的镜像名  Dockerfile文件所在路径
# -t表示tag，用于指定新的镜像名
通过docker build创建一个基于contos的httpd的镜像
以下在docker物理机上操作
[root@bogon ~]# mkdir /docker-build
[root@bogon ~]# cd /docker-build/
[root@bogon docker-build]# touch Dockerfile
[root@bogon docker-build]# vim Dockerfile 

FROM centos
MAINTAINER yoona2767  <yoona2767@gmail.com>
RUN yum -y install httpd
ADD start.sh /usr/local/bin/start.sh
ADD index.html /var/www/html/index.html

[root@bogon docker-build]# echo "/usr/sbin/httpd -DFOREGROUND" > start.sh
[root@bogon docker-build]# chmod a+x start.sh 
[root@bogon docker-build]# echo "docker image build test" > index.html
[root@bogon docker-build]# docker build -t centos:httpd .
验证：
[root@bogon docker-build]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              httpd               603113343ac0        10 seconds ago      288.2 MB
centos              nmap-ncat           beaf31a64be3        26 minutes ago      256.1 MB
nginx               latest              01f818af747d        13 days ago         181.6 MB
centos              latest              67591570dd29        3 weeks ago         191.8 MB
hello-world         latest              c54a2cc56cbb        6 months ago        1.848 kB

六、Docker image的发布
方法1、Save image to  Tarball
方法2、push image to  Docker Hub

方法1：Save image to  Tarball
语法：docker save -o 导出的镜像名   本地镜像
[root@bogon docker-build]# docker save -o centos-httpd-service.tar centos:httpd
[root@bogon docker-build]# ls
centos-httpd-service.tar  Dockerfile  index.html  start.sh
后期可以导入  用  docker load -i  +镜像名

方法2：push image to  Docker Hub
注册账号
[root@bogon docker-build]# docker login -u yoona2767 -p Lv_000@docker2767. -e xiaoteng2767@outlook.com
Flag --email has been deprecated, will be removed in 1.13.
Login Succeeded
[root@bogon docker-build]# docker push centos:httpd

七、端口映射
用刚才的httpd镜像，将其80端口映射到物理机上的9000端口
[root@bogon ~]# docker run -d -p 9000:80 centos:httpd /bin/sh -c /usr/local/bin/start.sh
f7bfbc9f83a0a37cc7e0ad39085d333d3ae69bf323c7d206bbe9a42f865a313e
[root@bogon ~]# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
f7bfbc9f83a0        centos:httpd        "/bin/sh -c /usr/loca"   20 seconds ago      Up 17 seconds       0.0.0.0:9000->80/tcp   suspicious_newton
[root@bogon ~]# netstat -antpu | grep 9000
tcp6       0      0 :::9000                 :::*                    LISTEN      4475/docker-proxy   
[root@bogon ~]# curl http://127.0.0.1:9000
docker image build test

八、访问正在运行的container
语法：docker exec -it <container ID | name> /bin/bash
[root@bogon ~]# docker exec -it f7bfbc9f83a0 /bin/bash
[root@f7bfbc9f83a0 /]# echo "<h1>TEST HTML</h1>" > /var/www/html/test.html
[root@bogon ~]# curl http://127.0.0.1:9000/test.html
<h1>TEST HTML</h1>





 
















